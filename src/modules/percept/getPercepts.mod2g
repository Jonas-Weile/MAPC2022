use "../../knowledge" as knowledge.

module getPercepts {
	% Perceive step
	if percept(step(S)), not(bel(step(S)))
		then insert(step(S)).
	if bel(step(S)), not(percept(step(S)))
		then delete(step(S)).
	
	% Perceive score
	if percept(score(S)), not(bel(score(S)))
		then insert(score(S)).
	if bel(score(S)), not(percept(score(S)))
		then delete(score(S)).
	
	% Percieve energy
	if bel(energy(OldLevel)), 
	   percept(energy(NewLevel))
	  then {
		if true then delete(energy(OldLevel)) + insert(energy(NewLevel)).
		if bel(OldLevel > NewLevel) then insert(completedClearAction(OldLevel)).
	}	
		
	
	% Perceive if agent is Disabled 
	if percept(disabled(D)), not(bel(disabled(D)))
		then insert(disabled(D)).
	if bel(disabled(D)), not(percept(disabled(D)))
		then delete(disabled(D)).
	
	% Perceive tasks
	forall percept(task(Task, Deadline, Reward, Requirements)), not(bel(task(Task, Deadline, Reward, Requirements)))
		do insert(task(Task, Deadline, Reward, Requirements)).
	forall bel(task(Task, Deadline, Reward, Requirements)), not(percept(task(Task, Deadline, Reward, Requirements))) 
		do delete(task(Task, Deadline, Reward, Requirements)).
			

			
	
	%%%%%%%%%%%%%%%%%%%%%% PERCEIVE THINGS %%%%%%%%%%%%%%%%%%%%%%%
	forall percept(thing(Xr, Yr, Type, Details), not((Xr = 0, Yr = 0, Type = entity))), 
		   not(bel(thing(Xr, Yr, Type, Details)))
		do insert(thing(Xr, Yr, Type, Details)).	
	 	
	forall bel(thing(Xr, Yr, Type, Details)), 
		   not(percept((thing(Xr, Yr, Type, Details))))
		do delete(thing(Xr, Yr, Type, Details)).
		
		
	%%%%%%%%%%%%%%%%%%%%%% PERCEIVE TERRAIN %%%%%%%%%%%%%%%%%%%%%%
	forall percept(attached(Xr, Yr)), not(bel(attached(Xr, Yr))) 
		do insert(attached(Xr, Yr)).
	forall bel(attached(Xr, Yr)), not(percept(attached(Xr, Yr))) 
		do delete(attached(Xr, Yr)).
	
	% Perceive obstacles
	forall percept(obstacle(Xr, Yr)), not(bel(obstacle(Xr, Yr))) 
		do insert(obstacle(Xr, Yr)).
	forall bel(obstacle(Xr, Yr)), not(percept(obstacle(Xr, Yr))) 
		do delete(obstacle(Xr, Yr)).
		
	% Perceive goals
	forall percept(goal(Xr, Yr)), not(bel(goal(Xr, Yr))) 
		do insert(goal(Xr, Yr)).
	forall bel(goal(Xr, Yr)), not(percept(goal(Xr, Yr))) 
		do delete(goal(Xr, Yr)).
		
		
	%%%%%%%%%%%%%%%%%%%% PERCEIVE LAST ACTION %%%%%%%%%%%%%%%%%%%%
	if bel(lastActionResult(R))
		then delete(lastActionResult(R)).
	if percept(lastActionResult(R))
		then insert(lastActionResult(R)).
		
	if bel(lastAction(A))
		then delete(lastAction(A)).
	if percept(lastAction(A))
		then insert(lastAction(A)).
		
	if bel(lastActionParams(P))
		then delete(lastActionParams(P)).
	if percept(lastActionParams(P))
		then insert(lastActionParams(P)).	
}